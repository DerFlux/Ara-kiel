// src/site/get-theme.js
import { readdirSync, writeFileSync } from "fs";
import { join } from "path";

const STYLES_DIR = "src/site/styles";
const CANVAS_DIR = "src/site/canvas";

function pickThemeFile() {
  const files = readdirSync(STYLES_DIR);
  // find the first _theme.*.css (adjust if you want the newest by mtime)
  const matches = files.filter(f => /^_theme\.[^/]+\.css$/i.test(f));
  if (!matches.length) {
    console.warn("[get-theme] No _theme.*.css found in", STYLES_DIR);
    return null;
  }
  // pick the first; if you want newest, sort by mtime here.
  return matches[0];
}

function main() {
  const themeFile = pickThemeFile();
  if (!themeFile) return;

  const href = `/styles/${themeFile}`;

  // 1) Create a stable alias that imports the hashed file
  // Using @import avoids duplicating bytes and stays cache-friendly
  const alias = `/* generated by get-theme.js */\n@import url("${href}");\n`;
  writeFileSync(join(STYLES_DIR, "theme.css"), alias, "utf8");
  console.log("[get-theme] Wrote styles/theme.css ->", href);

  // 2) Also emit a small JSON manifest for dynamic loading if needed
  const json = JSON.stringify({ href }, null, 2);
  writeFileSync(join(CANVAS_DIR, "theme.json"), json, "utf8");
  console.log("[get-theme] Wrote canvas/theme.json:", href);
}

main();
